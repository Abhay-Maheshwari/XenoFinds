
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  PrismaClientKnownRequestError,
  PrismaClientUnknownRequestError,
  PrismaClientRustPanicError,
  PrismaClientInitializationError,
  PrismaClientValidationError,
  getPrismaClient,
  sqltag,
  empty,
  join,
  raw,
  skip,
  Decimal,
  Debug,
  objectEnumValues,
  makeStrictEnum,
  Extensions,
  warnOnce,
  defineDmmfProperty,
  Public,
  getRuntime,
  createParam,
} = require('./runtime/wasm-engine-edge.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.16.1
 * Query Engine version: 1c57fdcd7e44b29b9313256c76699e91c3ac3c43
 */
Prisma.prismaVersion = {
  client: "6.16.1",
  engine: "1c57fdcd7e44b29b9313256c76699e91c3ac3c43"
}

Prisma.PrismaClientKnownRequestError = PrismaClientKnownRequestError;
Prisma.PrismaClientUnknownRequestError = PrismaClientUnknownRequestError
Prisma.PrismaClientRustPanicError = PrismaClientRustPanicError
Prisma.PrismaClientInitializationError = PrismaClientInitializationError
Prisma.PrismaClientValidationError = PrismaClientValidationError
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = sqltag
Prisma.empty = empty
Prisma.join = join
Prisma.raw = raw
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = Extensions.getExtensionContext
Prisma.defineExtension = Extensions.defineExtension

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}





/**
 * Enums
 */
exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.TenantScalarFieldEnum = {
  id: 'id',
  name: 'name',
  email: 'email',
  password: 'password',
  shopifyApiKey: 'shopifyApiKey',
  shopifyApiSecret: 'shopifyApiSecret',
  shopifyStoreUrl: 'shopifyStoreUrl',
  accessToken: 'accessToken',
  isActive: 'isActive',
  lastSyncedAt: 'lastSyncedAt',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.CustomerScalarFieldEnum = {
  id: 'id',
  shopifyCustomerId: 'shopifyCustomerId',
  firstName: 'firstName',
  lastName: 'lastName',
  email: 'email',
  phone: 'phone',
  acceptsMarketing: 'acceptsMarketing',
  totalSpent: 'totalSpent',
  ordersCount: 'ordersCount',
  state: 'state',
  tags: 'tags',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  tenantId: 'tenantId'
};

exports.Prisma.OrderScalarFieldEnum = {
  id: 'id',
  shopifyOrderId: 'shopifyOrderId',
  orderNumber: 'orderNumber',
  totalPrice: 'totalPrice',
  subtotalPrice: 'subtotalPrice',
  totalTax: 'totalTax',
  currency: 'currency',
  financialStatus: 'financialStatus',
  fulfillmentStatus: 'fulfillmentStatus',
  processedAt: 'processedAt',
  cancelledAt: 'cancelledAt',
  tags: 'tags',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  tenantId: 'tenantId',
  customerId: 'customerId'
};

exports.Prisma.ProductScalarFieldEnum = {
  id: 'id',
  shopifyProductId: 'shopifyProductId',
  title: 'title',
  handle: 'handle',
  vendor: 'vendor',
  productType: 'productType',
  status: 'status',
  totalInventory: 'totalInventory',
  tags: 'tags',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  tenantId: 'tenantId'
};

exports.Prisma.CustomEventScalarFieldEnum = {
  id: 'id',
  eventType: 'eventType',
  eventData: 'eventData',
  sessionId: 'sessionId',
  ipAddress: 'ipAddress',
  userAgent: 'userAgent',
  referrer: 'referrer',
  createdAt: 'createdAt',
  tenantId: 'tenantId',
  customerId: 'customerId'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.NullableJsonNullValueInput = {
  DbNull: Prisma.DbNull,
  JsonNull: Prisma.JsonNull
};

exports.Prisma.QueryMode = {
  default: 'default',
  insensitive: 'insensitive'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};

exports.Prisma.JsonNullValueFilter = {
  DbNull: Prisma.DbNull,
  JsonNull: Prisma.JsonNull,
  AnyNull: Prisma.AnyNull
};


exports.Prisma.ModelName = {
  Tenant: 'Tenant',
  Customer: 'Customer',
  Order: 'Order',
  Product: 'Product',
  CustomEvent: 'CustomEvent'
};
/**
 * Create the Client
 */
const config = {
  "generator": {
    "name": "client",
    "provider": {
      "fromEnvVar": null,
      "value": "prisma-client-js"
    },
    "output": {
      "value": "D:\\List of Deliverables from XenoFDE Internship Assignment 2025\\backend\\src\\generated\\prisma",
      "fromEnvVar": null
    },
    "config": {
      "engineType": "library"
    },
    "binaryTargets": [
      {
        "fromEnvVar": null,
        "value": "windows",
        "native": true
      }
    ],
    "previewFeatures": [],
    "sourceFilePath": "D:\\List of Deliverables from XenoFDE Internship Assignment 2025\\prisma\\schema.prisma",
    "isCustomOutput": true
  },
  "relativeEnvPaths": {
    "rootEnvPath": null,
    "schemaEnvPath": "../../../../.env"
  },
  "relativePath": "../../../../prisma",
  "clientVersion": "6.16.1",
  "engineVersion": "1c57fdcd7e44b29b9313256c76699e91c3ac3c43",
  "datasourceNames": [
    "db"
  ],
  "activeProvider": "postgresql",
  "inlineDatasources": {
    "db": {
      "url": {
        "fromEnvVar": "DATABASE_URL",
        "value": null
      }
    }
  },
  "inlineSchema": "// Shopify Data Ingestion & Insights Service - Prisma Schema\n// Multi-tenant database schema for Shopify integration\n\ngenerator client {\n  provider = \"prisma-client-js\"\n  output   = \"../backend/src/generated/prisma\"\n}\n\ndatasource db {\n  provider = \"postgresql\"\n  url      = env(\"DATABASE_URL\")\n}\n\n// Tenant model - represents a business/organization using the service\nmodel Tenant {\n  id               String    @id @default(uuid())\n  name             String\n  email            String    @unique\n  password         String\n  shopifyApiKey    String?\n  shopifyApiSecret String?\n  shopifyStoreUrl  String?\n  accessToken      String?\n  isActive         Boolean   @default(true)\n  lastSyncedAt     DateTime?\n  createdAt        DateTime  @default(now())\n  updatedAt        DateTime  @updatedAt\n\n  // Relations\n  customers    Customer[]\n  orders       Order[]\n  products     Product[]\n  customEvents CustomEvent[]\n\n  @@map(\"tenants\")\n}\n\n// Customer model - represents Shopify customers\nmodel Customer {\n  id                String   @id @default(uuid())\n  shopifyCustomerId String   @unique\n  firstName         String?\n  lastName          String?\n  email             String?\n  phone             String?\n  acceptsMarketing  Boolean  @default(false)\n  totalSpent        Decimal  @default(0) @db.Decimal(10, 2)\n  ordersCount       Int      @default(0)\n  state             String?\n  tags              String?\n  createdAt         DateTime @default(now())\n  updatedAt         DateTime @updatedAt\n\n  // Foreign key\n  tenantId String\n  tenant   Tenant @relation(fields: [tenantId], references: [id], onDelete: Cascade)\n\n  // Relations\n  orders       Order[]\n  customEvents CustomEvent[]\n\n  @@map(\"customers\")\n}\n\n// Order model - represents Shopify orders\nmodel Order {\n  id                String    @id @default(uuid())\n  shopifyOrderId    String    @unique\n  orderNumber       String?\n  totalPrice        Decimal   @db.Decimal(10, 2)\n  subtotalPrice     Decimal?  @db.Decimal(10, 2)\n  totalTax          Decimal?  @db.Decimal(10, 2)\n  currency          String    @default(\"USD\")\n  financialStatus   String?\n  fulfillmentStatus String?\n  processedAt       DateTime?\n  cancelledAt       DateTime?\n  tags              String?\n  createdAt         DateTime  @default(now())\n  updatedAt         DateTime  @updatedAt\n\n  // Foreign keys\n  tenantId String\n  tenant   Tenant @relation(fields: [tenantId], references: [id], onDelete: Cascade)\n\n  customerId String?\n  customer   Customer? @relation(fields: [customerId], references: [id], onDelete: SetNull)\n\n  @@map(\"orders\")\n}\n\n// Product model - represents Shopify products\nmodel Product {\n  id               String   @id @default(uuid())\n  shopifyProductId String   @unique\n  title            String\n  handle           String?\n  vendor           String?\n  productType      String?\n  status           String   @default(\"active\")\n  totalInventory   Int      @default(0)\n  tags             String?\n  createdAt        DateTime @default(now())\n  updatedAt        DateTime @updatedAt\n\n  // Foreign key\n  tenantId String\n  tenant   Tenant @relation(fields: [tenantId], references: [id], onDelete: Cascade)\n\n  @@map(\"products\")\n}\n\n// CustomEvent model - represents custom events (cart abandoned, checkout started, etc.)\nmodel CustomEvent {\n  id        String   @id @default(uuid())\n  eventType String // 'cart_abandoned', 'checkout_started', 'page_viewed', etc.\n  eventData Json? // Store additional event data as JSON\n  sessionId String?\n  ipAddress String?\n  userAgent String?\n  referrer  String?\n  createdAt DateTime @default(now())\n\n  // Foreign keys\n  tenantId String\n  tenant   Tenant @relation(fields: [tenantId], references: [id], onDelete: Cascade)\n\n  customerId String?\n  customer   Customer? @relation(fields: [customerId], references: [id], onDelete: SetNull)\n\n  @@map(\"custom_events\")\n}\n",
  "inlineSchemaHash": "2b08fdd0442d7b2603598e9eb7d987180ed045729cbdc9c57f0144b52c5689d9",
  "copyEngine": true
}
config.dirname = '/'

config.runtimeDataModel = JSON.parse("{\"models\":{\"Tenant\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"email\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"password\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"shopifyApiKey\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"shopifyApiSecret\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"shopifyStoreUrl\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"accessToken\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"isActive\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"lastSyncedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"customers\",\"kind\":\"object\",\"type\":\"Customer\",\"relationName\":\"CustomerToTenant\"},{\"name\":\"orders\",\"kind\":\"object\",\"type\":\"Order\",\"relationName\":\"OrderToTenant\"},{\"name\":\"products\",\"kind\":\"object\",\"type\":\"Product\",\"relationName\":\"ProductToTenant\"},{\"name\":\"customEvents\",\"kind\":\"object\",\"type\":\"CustomEvent\",\"relationName\":\"CustomEventToTenant\"}],\"dbName\":\"tenants\"},\"Customer\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"shopifyCustomerId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"firstName\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"lastName\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"email\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"phone\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"acceptsMarketing\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"totalSpent\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"ordersCount\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"state\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"tags\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"tenantId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"tenant\",\"kind\":\"object\",\"type\":\"Tenant\",\"relationName\":\"CustomerToTenant\"},{\"name\":\"orders\",\"kind\":\"object\",\"type\":\"Order\",\"relationName\":\"CustomerToOrder\"},{\"name\":\"customEvents\",\"kind\":\"object\",\"type\":\"CustomEvent\",\"relationName\":\"CustomEventToCustomer\"}],\"dbName\":\"customers\"},\"Order\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"shopifyOrderId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"orderNumber\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"totalPrice\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"subtotalPrice\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"totalTax\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"currency\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"financialStatus\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"fulfillmentStatus\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"processedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"cancelledAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"tags\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"tenantId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"tenant\",\"kind\":\"object\",\"type\":\"Tenant\",\"relationName\":\"OrderToTenant\"},{\"name\":\"customerId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"customer\",\"kind\":\"object\",\"type\":\"Customer\",\"relationName\":\"CustomerToOrder\"}],\"dbName\":\"orders\"},\"Product\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"shopifyProductId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"title\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"handle\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"vendor\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"productType\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"status\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"totalInventory\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"tags\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"tenantId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"tenant\",\"kind\":\"object\",\"type\":\"Tenant\",\"relationName\":\"ProductToTenant\"}],\"dbName\":\"products\"},\"CustomEvent\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"eventType\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"eventData\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"sessionId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"ipAddress\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userAgent\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"referrer\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"tenantId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"tenant\",\"kind\":\"object\",\"type\":\"Tenant\",\"relationName\":\"CustomEventToTenant\"},{\"name\":\"customerId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"customer\",\"kind\":\"object\",\"type\":\"Customer\",\"relationName\":\"CustomEventToCustomer\"}],\"dbName\":\"custom_events\"}},\"enums\":{},\"types\":{}}")
defineDmmfProperty(exports.Prisma, config.runtimeDataModel)
config.engineWasm = {
  getRuntime: async () => require('./query_engine_bg.js'),
  getQueryEngineWasmModule: async () => {
    const loader = (await import('#wasm-engine-loader')).default
    const engine = (await loader).default
    return engine
  }
}
config.compilerWasm = undefined

config.injectableEdgeEnv = () => ({
  parsed: {
    DATABASE_URL: typeof globalThis !== 'undefined' && globalThis['DATABASE_URL'] || typeof process !== 'undefined' && process.env && process.env.DATABASE_URL || undefined
  }
})

if (typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined) {
  Debug.enable(typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined)
}

const PrismaClient = getPrismaClient(config)
exports.PrismaClient = PrismaClient
Object.assign(exports, Prisma)

